<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1680" height="322" onload="init(evt)" viewBox="0 0 1680 322" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) { 
		details = document.getElementById("details").firstChild; 
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		if (func != null)
			func = func.replace(/ .*/, "");
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
		
		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}
		
		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;
		
		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) { 
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}
		
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) { 
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;
		
		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;
		
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";
		
		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";
		
		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}	

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1680.0" height="322.0" fill="url(#background)"  />
<text text-anchor="middle" x="840.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="305" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1570.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1570.00" y="305" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange(char[], int, int) (5 samples, 0.14%)</title><rect x="267.6" y="193" width="2.3" height="15.0" fill="rgb(224,220,33)" rx="2" ry="2" />
<text text-anchor="" x="270.60" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.(init)() (43 samples, 1.19%)</title><rect x="520.6" y="209" width="19.7" height="15.0" fill="rgb(241,141,43)" rx="2" ry="2" />
<text text-anchor="" x="523.63" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(sun.misc.FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean) (1,211 samples, 33.38%)</title><rect x="853.3" y="145" width="554.1" height="15.0" fill="rgb(237,7,34)" rx="2" ry="2" />
<text text-anchor="" x="856.27" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(sun.misc.FloatingDec..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(java.lang.String) (224 samples, 6.17%)</title><rect x="164.7" y="225" width="102.4" height="15.0" fill="rgb(222,42,40)" rx="2" ry="2" />
<text text-anchor="" x="167.65" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.St..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.(init)(char[], int, int, java.math.MathContext) (442 samples, 12.18%)</title><rect x="1465.9" y="177" width="202.3" height="15.0" fill="rgb(238,160,37)" rx="2" ry="2" />
<text text-anchor="" x="1468.93" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.math.BigDecimal.(init..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.(init)(char[], int, int) (5 samples, 0.14%)</title><rect x="267.6" y="209" width="2.3" height="15.0" fill="rgb(207,155,28)" rx="2" ry="2" />
<text text-anchor="" x="270.60" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.JFRImpl.dumpOnExit() (1 samples, 0.03%)</title><rect x="1669.5" y="209" width="0.5" height="15.0" fill="rgb(215,170,39)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.security.MessageDigest$Delegate.engineUpdate(byte[], int, int) (16 samples, 0.44%)</title><rect x="270.3" y="209" width="7.4" height="15.0" fill="rgb(221,78,52)" rx="2" ry="2" />
<text text-anchor="" x="273.35" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.DigestBase.implCompressMultiBlock(byte[], int, int) (16 samples, 0.44%)</title><rect x="270.3" y="177" width="7.4" height="15.0" fill="rgb(254,15,26)" rx="2" ry="2" />
<text text-anchor="" x="273.35" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean) (1,111 samples, 30.62%)</title><rect x="899.0" y="129" width="508.4" height="15.0" fill="rgb(253,149,5)" rx="2" ry="2" />
<text text-anchor="" x="902.02" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.run() (3,628 samples, 100.00%)</title><rect x="10.0" y="257" width="1660.0" height="15.0" fill="rgb(216,23,51)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Thread.run()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.NativePRNG$RandomIO.implNextBytes(byte[]) (76 samples, 2.09%)</title><rect x="485.9" y="161" width="34.7" height="15.0" fill="rgb(220,72,24)" rx="2" ry="2" />
<text text-anchor="" x="488.85" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >su..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append(java.lang.String) (223 samples, 6.15%)</title><rect x="165.1" y="209" width="102.0" height="15.0" fill="rgb(246,124,27)" rx="2" ry="2" />
<text text-anchor="" x="168.11" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Ab..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.encode(char[], int, int) (4 samples, 0.11%)</title><rect x="162.8" y="209" width="1.9" height="15.0" fill="rgb(251,102,40)" rx="2" ry="2" />
<text text-anchor="" x="165.82" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.add(long, int, java.math.BigInteger, int) (132 samples, 3.64%)</title><rect x="765.4" y="209" width="60.4" height="15.0" fill="rgb(247,139,38)" rx="2" ry="2" />
<text text-anchor="" x="768.42" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.jca.GetInstance.getInstance(java.lang.String, java.lang.Class, java.lang.String) (1 samples, 0.03%)</title><rect x="269.9" y="193" width="0.4" height="15.0" fill="rgb(212,206,2)" rx="2" ry="2" />
<text text-anchor="" x="272.89" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.DigestBase.engineUpdate(byte[], int, int) (16 samples, 0.44%)</title><rect x="270.3" y="193" width="7.4" height="15.0" fill="rgb(244,189,39)" rx="2" ry="2" />
<text text-anchor="" x="273.35" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.Settings$Aggregator.copy(oracle.jrockit.jfr.Settings$Aggregator) (1 samples, 0.03%)</title><rect x="1669.5" y="161" width="0.5" height="15.0" fill="rgb(242,202,33)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.ByteArrayAccess.b2iBig64(byte[], int, int[]) (1 samples, 0.03%)</title><rect x="277.2" y="145" width="0.5" height="15.0" fill="rgb(228,0,30)" rx="2" ry="2" />
<text text-anchor="" x="280.21" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Random.nextDouble() (1 samples, 0.03%)</title><rect x="1668.2" y="225" width="0.4" height="15.0" fill="rgb(227,188,1)" rx="2" ry="2" />
<text text-anchor="" x="1671.17" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.security.MessageDigest.update(byte[]) (16 samples, 0.44%)</title><rect x="270.3" y="225" width="7.4" height="15.0" fill="rgb(206,87,21)" rx="2" ry="2" />
<text text-anchor="" x="273.35" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.FloatingDecimal.getBinaryToASCIIBuffer() (43 samples, 1.19%)</title><rect x="1407.4" y="145" width="19.6" height="15.0" fill="rgb(250,16,2)" rx="2" ry="2" />
<text text-anchor="" x="1410.36" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.NativePRNG$RandomIO.readFully(java.io.InputStream, byte[]) (2 samples, 0.06%)</title><rect x="492.7" y="129" width="0.9" height="15.0" fill="rgb(230,29,0)" rx="2" ry="2" />
<text text-anchor="" x="495.72" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.add(java.math.BigDecimal) (137 samples, 3.78%)</title><rect x="702.7" y="225" width="62.7" height="15.0" fill="rgb(249,211,38)" rx="2" ry="2" />
<text text-anchor="" x="705.73" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getChars(int, int, char[], int) (8 samples, 0.22%)</title><rect x="263.5" y="193" width="3.6" height="15.0" fill="rgb(241,37,40)" rx="2" ry="2" />
<text text-anchor="" x="266.48" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.security.Security.getImpl(java.lang.String, java.lang.String, java.lang.String) (1 samples, 0.03%)</title><rect x="269.9" y="209" width="0.4" height="15.0" fill="rgb(205,157,7)" rx="2" ry="2" />
<text text-anchor="" x="272.89" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.JFRImpl.destroy() (1 samples, 0.03%)</title><rect x="1669.5" y="225" width="0.5" height="15.0" fill="rgb(248,56,19)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal$ThreadLocalMap.access$000(java.lang.ThreadLocal$ThreadLocalMap, java.lang.ThreadLocal) (42 samples, 1.16%)</title><rect x="1407.8" y="113" width="19.2" height="15.0" fill="rgb(210,78,52)" rx="2" ry="2" />
<text text-anchor="" x="1410.82" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.security.MessageDigest$Delegate.engineDigest() (46 samples, 1.27%)</title><rect x="499.1" y="113" width="21.1" height="15.0" fill="rgb(206,183,16)" rx="2" ry="2" />
<text text-anchor="" x="502.12" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.valueOf(java.math.BigInteger, int, int) (17 samples, 0.47%)</title><rect x="777.3" y="193" width="7.8" height="15.0" fill="rgb(241,181,53)" rx="2" ry="2" />
<text text-anchor="" x="780.32" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.DigestBase.engineDigest(byte[], int, int) (46 samples, 1.27%)</title><rect x="499.1" y="81" width="21.1" height="15.0" fill="rgb(238,219,54)" rx="2" ry="2" />
<text text-anchor="" x="502.12" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(java.lang.String) (1 samples, 0.03%)</title><rect x="540.3" y="209" width="0.5" height="15.0" fill="rgb(229,176,50)" rx="2" ry="2" />
<text text-anchor="" x="543.30" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.jca.GetInstance.getInstance(java.security.Provider$Service, java.lang.Class) (1 samples, 0.03%)</title><rect x="269.9" y="177" width="0.4" height="15.0" fill="rgb(210,137,19)" rx="2" ry="2" />
<text text-anchor="" x="272.89" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.toString() (6 samples, 0.17%)</title><rect x="267.1" y="225" width="2.8" height="15.0" fill="rgb(209,44,13)" rx="2" ry="2" />
<text text-anchor="" x="270.14" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.FloatingDecimal.getBinaryToASCIIConverter(double, boolean) (1,254 samples, 34.56%)</title><rect x="853.3" y="161" width="573.7" height="15.0" fill="rgb(226,114,12)" rx="2" ry="2" />
<text text-anchor="" x="856.27" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.FloatingDecimal.getBinaryToASCIIConverter(double, boolean)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.oracle.jrockit.jfr.EventToken.isEnabled() (1 samples, 0.03%)</title><rect x="493.2" y="97" width="0.4" height="15.0" fill="rgb(212,207,13)" rx="2" ry="2" />
<text text-anchor="" x="496.18" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.valueOf(double) (1,839 samples, 50.69%)</title><rect x="826.7" y="225" width="841.5" height="15.0" fill="rgb(237,161,38)" rx="2" ry="2" />
<text text-anchor="" x="829.73" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.math.BigDecimal.valueOf(double)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.expandCapacity(int) (1 samples, 0.03%)</title><rect x="540.3" y="161" width="0.5" height="15.0" fill="rgb(235,52,12)" rx="2" ry="2" />
<text text-anchor="" x="543.30" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.SecureRandom.updateState(byte[], byte[]) (1 samples, 0.03%)</title><rect x="520.2" y="129" width="0.4" height="15.0" fill="rgb(219,43,13)" rx="2" ry="2" />
<text text-anchor="" x="523.17" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getBytes() (4 samples, 0.11%)</title><rect x="162.8" y="225" width="1.9" height="15.0" fill="rgb(251,144,39)" rx="2" ry="2" />
<text text-anchor="" x="165.82" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal.get() (43 samples, 1.19%)</title><rect x="1407.4" y="129" width="19.6" height="15.0" fill="rgb(244,80,38)" rx="2" ry="2" />
<text text-anchor="" x="1410.36" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Double.toString(double) (1,312 samples, 36.16%)</title><rect x="826.7" y="209" width="600.3" height="15.0" fill="rgb(234,3,36)" rx="2" ry="2" />
<text text-anchor="" x="829.73" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Double.toString(double)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.JFRImpl.dumpOnExit(oracle.jrockit.jfr.Recording) (1 samples, 0.03%)</title><rect x="1669.5" y="193" width="0.5" height="15.0" fill="rgb(216,24,33)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.add(long, long, int) (1 samples, 0.03%)</title><rect x="765.0" y="193" width="0.4" height="15.0" fill="rgb(222,161,2)" rx="2" ry="2" />
<text text-anchor="" x="767.96" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append(java.lang.String) (1 samples, 0.03%)</title><rect x="540.3" y="193" width="0.5" height="15.0" fill="rgb(225,75,32)" rx="2" ry="2" />
<text text-anchor="" x="543.30" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.security.SecureRandom.nextBytes(byte[]) (530 samples, 14.61%)</title><rect x="278.1" y="209" width="242.5" height="15.0" fill="rgb(233,132,13)" rx="2" ry="2" />
<text text-anchor="" x="281.13" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.security.SecureRandom.nextB..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.DigestBase.engineDigest() (46 samples, 1.27%)</title><rect x="499.1" y="97" width="21.1" height="15.0" fill="rgb(248,185,1)" rx="2" ry="2" />
<text text-anchor="" x="502.12" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOf(char[], int) (211 samples, 5.82%)</title><rect x="166.9" y="161" width="96.6" height="15.0" fill="rgb(241,87,29)" rx="2" ry="2" />
<text text-anchor="" x="169.94" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.A..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.formatUnsignedLong(long, int, char[], int, int) (5 samples, 0.14%)</title><rect x="540.8" y="161" width="2.2" height="15.0" fill="rgb(222,157,9)" rx="2" ry="2" />
<text text-anchor="" x="543.76" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.expandCapacity(int) (211 samples, 5.82%)</title><rect x="166.9" y="177" width="96.6" height="15.0" fill="rgb(213,5,18)" rx="2" ry="2" />
<text text-anchor="" x="169.94" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.A..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.negate() (1 samples, 0.03%)</title><rect x="826.3" y="209" width="0.4" height="15.0" fill="rgb(205,206,1)" rx="2" ry="2" />
<text text-anchor="" x="829.27" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.github.chrishantha.sample.highcpu.MathWorker.run() (2,462 samples, 67.86%)</title><rect x="543.0" y="241" width="1126.5" height="15.0" fill="rgb(249,123,39)" rx="2" ry="2" />
<text text-anchor="" x="546.05" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com.github.chrishantha.sample.highcpu.MathWorker.run()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.add(long) (89 samples, 2.45%)</title><rect x="785.1" y="193" width="40.7" height="15.0" fill="rgb(220,6,1)" rx="2" ry="2" />
<text text-anchor="" x="788.09" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jav..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.(init)(int) (43 samples, 1.19%)</title><rect x="520.6" y="193" width="19.7" height="15.0" fill="rgb(218,181,24)" rx="2" ry="2" />
<text text-anchor="" x="523.63" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.security.MessageDigest.getInstance(java.lang.String) (1 samples, 0.03%)</title><rect x="269.9" y="225" width="0.4" height="15.0" fill="rgb(233,51,0)" rx="2" ry="2" />
<text text-anchor="" x="272.89" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.ByteArrayAccess.b2iBig64(byte[], int, int[]) (4 samples, 0.11%)</title><rect x="518.3" y="33" width="1.9" height="15.0" fill="rgb(240,194,32)" rx="2" ry="2" />
<text text-anchor="" x="521.34" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry(java.lang.ThreadLocal) (42 samples, 1.16%)</title><rect x="1407.8" y="97" width="19.2" height="15.0" fill="rgb(246,13,53)" rx="2" ry="2" />
<text text-anchor="" x="1410.82" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.Settings$Aggregator.mergeDefaults(java.util.Collection, java.util.Map) (1 samples, 0.03%)</title><rect x="1669.5" y="97" width="0.5" height="15.0" fill="rgb(212,195,48)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.compareMagnitude(long) (41 samples, 1.13%)</title><rect x="746.2" y="177" width="18.8" height="15.0" fill="rgb(242,95,14)" rx="2" ry="2" />
<text text-anchor="" x="749.20" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.valueOf(java.math.BigInteger, int, int) (94 samples, 2.59%)</title><rect x="703.2" y="193" width="43.0" height="15.0" fill="rgb(239,46,43)" rx="2" ry="2" />
<text text-anchor="" x="706.19" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.SecureRandom.engineNextBytes(byte[]) (59 samples, 1.63%)</title><rect x="493.6" y="145" width="27.0" height="15.0" fill="rgb(219,82,24)" rx="2" ry="2" />
<text text-anchor="" x="496.63" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toUnsignedString0(long, int) (5 samples, 0.14%)</title><rect x="540.8" y="177" width="2.2" height="15.0" fill="rgb(235,113,47)" rx="2" ry="2" />
<text text-anchor="" x="543.76" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read(byte[], int, int) (2 samples, 0.06%)</title><rect x="492.7" y="113" width="0.9" height="15.0" fill="rgb(217,159,49)" rx="2" ry="2" />
<text text-anchor="" x="495.72" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.encode(java.lang.String, char[], int, int) (4 samples, 0.11%)</title><rect x="162.8" y="193" width="1.9" height="15.0" fill="rgb(207,93,16)" rx="2" ry="2" />
<text text-anchor="" x="165.82" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Math.atan(double) (336 samples, 9.26%)</title><rect x="549.0" y="225" width="153.7" height="15.0" fill="rgb(248,119,38)" rx="2" ry="2" />
<text text-anchor="" x="552.00" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Math.atan..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.ByteArrayAccess.i2bBig4(int, byte[], int) (13 samples, 0.36%)</title><rect x="500.0" y="49" width="6.0" height="15.0" fill="rgb(223,0,8)" rx="2" ry="2" />
<text text-anchor="" x="503.04" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.UUID.randomUUID() (531 samples, 14.64%)</title><rect x="277.7" y="225" width="242.9" height="15.0" fill="rgb(253,69,39)" rx="2" ry="2" />
<text text-anchor="" x="280.67" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.UUID.randomUUID()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.add(long, int, long, int) (1 samples, 0.03%)</title><rect x="765.0" y="209" width="0.4" height="15.0" fill="rgb(240,143,16)" rx="2" ry="2" />
<text text-anchor="" x="767.96" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.Settings$Aggregator.updateDefaults(java.util.Collection) (1 samples, 0.03%)</title><rect x="1669.5" y="113" width="0.5" height="15.0" fill="rgb(247,103,40)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.SHA.implDigest(byte[], int) (46 samples, 1.27%)</title><rect x="499.1" y="65" width="21.1" height="15.0" fill="rgb(208,6,7)" rx="2" ry="2" />
<text text-anchor="" x="502.12" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.Settings$Aggregator.updateDefaults() (1 samples, 0.03%)</title><rect x="1669.5" y="129" width="0.5" height="15.0" fill="rgb(230,36,5)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding$StringEncoder.encode(char[], int, int) (4 samples, 0.11%)</title><rect x="162.8" y="177" width="1.9" height="15.0" fill="rgb(219,103,39)" rx="2" ry="2" />
<text text-anchor="" x="165.82" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.subtract(java.math.BigDecimal) (134 samples, 3.69%)</title><rect x="765.4" y="225" width="61.3" height="15.0" fill="rgb(251,186,11)" rx="2" ry="2" />
<text text-anchor="" x="768.42" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.valueOf(long, int) (1 samples, 0.03%)</title><rect x="765.0" y="177" width="0.4" height="15.0" fill="rgb(244,16,21)" rx="2" ry="2" />
<text text-anchor="" x="767.96" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.UUID.digits(long, int) (5 samples, 0.14%)</title><rect x="540.8" y="209" width="2.2" height="15.0" fill="rgb(232,45,15)" rx="2" ry="2" />
<text text-anchor="" x="543.76" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.oracle.jrockit.jfr.DurationEvent.begin() (1 samples, 0.03%)</title><rect x="492.7" y="97" width="0.5" height="15.0" fill="rgb(235,69,49)" rx="2" ry="2" />
<text text-anchor="" x="495.72" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.FloatingDecimal.getBinaryToASCIIConverter(double) (1,254 samples, 34.56%)</title><rect x="853.3" y="177" width="573.7" height="15.0" fill="rgb(213,91,28)" rx="2" ry="2" />
<text text-anchor="" x="856.27" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.FloatingDecimal.getBinaryToASCIIConverter(double)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.add(long, int, java.math.BigInteger, int) (136 samples, 3.75%)</title><rect x="702.7" y="209" width="62.3" height="15.0" fill="rgb(206,209,32)" rx="2" ry="2" />
<text text-anchor="" x="705.73" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.NativePRNG$RandomIO.ensureBufferValid() (3 samples, 0.08%)</title><rect x="492.3" y="145" width="1.3" height="15.0" fill="rgb(221,73,10)" rx="2" ry="2" />
<text text-anchor="" x="495.26" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.add(int[], long) (2 samples, 0.06%)</title><rect x="785.6" y="177" width="0.9" height="15.0" fill="rgb(205,4,43)" rx="2" ry="2" />
<text text-anchor="" x="788.55" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.add(long, int, long, int) (1 samples, 0.03%)</title><rect x="825.8" y="209" width="0.5" height="15.0" fill="rgb(233,209,31)" rx="2" ry="2" />
<text text-anchor="" x="828.82" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.Settings$Aggregator.replaceEventDefaultSets(java.util.Collection) (1 samples, 0.03%)</title><rect x="1669.5" y="145" width="0.5" height="15.0" fill="rgb(245,207,13)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal(int) (211 samples, 5.82%)</title><rect x="166.9" y="193" width="96.6" height="15.0" fill="rgb(231,9,43)" rx="2" ry="2" />
<text text-anchor="" x="169.94" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.A..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.NativePRNG.engineNextBytes(byte[]) (499 samples, 13.75%)</title><rect x="292.3" y="193" width="228.3" height="15.0" fill="rgb(212,147,17)" rx="2" ry="2" />
<text text-anchor="" x="295.31" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.security.provider.NativePR..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.SHA.implCompress(byte[], int) (31 samples, 0.85%)</title><rect x="506.0" y="49" width="14.2" height="15.0" fill="rgb(240,74,29)" rx="2" ry="2" />
<text text-anchor="" x="508.99" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.(init)(char[], int, int) (527 samples, 14.53%)</title><rect x="1427.0" y="193" width="241.2" height="15.0" fill="rgb(224,225,9)" rx="2" ry="2" />
<text text-anchor="" x="1430.04" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.math.BigDecimal.(init)(char..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString() (57 samples, 1.57%)</title><rect x="827.2" y="177" width="26.1" height="15.0" fill="rgb(235,76,48)" rx="2" ry="2" />
<text text-anchor="" x="830.19" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.security.MessageDigest.digest() (46 samples, 1.27%)</title><rect x="499.1" y="129" width="21.1" height="15.0" fill="rgb(237,5,4)" rx="2" ry="2" />
<text text-anchor="" x="502.12" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.compareMagnitude(long) (86 samples, 2.37%)</title><rect x="786.5" y="177" width="39.3" height="15.0" fill="rgb(218,27,21)" rx="2" ry="2" />
<text text-anchor="" x="789.47" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jav..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.JFRImpl.cloneRecording(oracle.jrockit.jfr.Recording, java.lang.String, boolean) (1 samples, 0.03%)</title><rect x="1669.5" y="177" width="0.5" height="15.0" fill="rgb(233,114,45)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Random.nextInt(int) (2 samples, 0.06%)</title><rect x="1668.6" y="225" width="0.9" height="15.0" fill="rgb(225,73,41)" rx="2" ry="2" />
<text text-anchor="" x="1671.63" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.add(long) (41 samples, 1.13%)</title><rect x="746.2" y="193" width="18.8" height="15.0" fill="rgb(215,82,0)" rx="2" ry="2" />
<text text-anchor="" x="749.20" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.(init)(java.lang.String) (527 samples, 14.53%)</title><rect x="1427.0" y="209" width="241.2" height="15.0" fill="rgb(236,38,2)" rx="2" ry="2" />
<text text-anchor="" x="1430.04" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.math.BigDecimal.(init)(java..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.(init)(char[], int, int) (2 samples, 0.06%)</title><rect x="831.8" y="161" width="0.9" height="15.0" fill="rgb(240,151,42)" rx="2" ry="2" />
<text text-anchor="" x="834.76" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange(char[], int, int) (2 samples, 0.06%)</title><rect x="831.8" y="145" width="0.9" height="15.0" fill="rgb(250,179,17)" rx="2" ry="2" />
<text text-anchor="" x="834.76" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.UUID.toString() (49 samples, 1.35%)</title><rect x="520.6" y="225" width="22.4" height="15.0" fill="rgb(221,13,46)" rx="2" ry="2" />
<text text-anchor="" x="523.63" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >j..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toHexString(long) (5 samples, 0.14%)</title><rect x="540.8" y="193" width="2.2" height="15.0" fill="rgb(211,127,52)" rx="2" ry="2" />
<text text-anchor="" x="543.76" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.equals(java.lang.Object) (1 samples, 0.03%)</title><rect x="1669.5" y="65" width="0.5" height="15.0" fill="rgb(216,190,33)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.FloatingDecimal.toJavaFormatString(double) (1,312 samples, 36.16%)</title><rect x="826.7" y="193" width="600.3" height="15.0" fill="rgb(233,29,31)" rx="2" ry="2" />
<text text-anchor="" x="829.73" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.FloatingDecimal.toJavaFormatString(double)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOf(char[], int) (1 samples, 0.03%)</title><rect x="540.3" y="145" width="0.5" height="15.0" fill="rgb(245,177,40)" rx="2" ry="2" />
<text text-anchor="" x="543.30" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.Settings$Aggregator.getDefault(com.oracle.jrockit.jfr.EventInfo) (1 samples, 0.03%)</title><rect x="1669.5" y="81" width="0.5" height="15.0" fill="rgb(207,66,47)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal(int) (1 samples, 0.03%)</title><rect x="540.3" y="177" width="0.5" height="15.0" fill="rgb(206,168,52)" rx="2" ry="2" />
<text text-anchor="" x="543.30" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.SHA.implCompress(byte[], int) (16 samples, 0.44%)</title><rect x="270.3" y="161" width="7.4" height="15.0" fill="rgb(236,31,21)" rx="2" ry="2" />
<text text-anchor="" x="273.35" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(char[]) (45 samples, 1.24%)</title><rect x="832.7" y="161" width="20.6" height="15.0" fill="rgb(227,136,24)" rx="2" ry="2" />
<text text-anchor="" x="835.68" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (3,628 samples, 100%)</title><rect x="10.0" y="273" width="1660.0" height="15.0" fill="rgb(232,177,42)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.github.chrishantha.sample.highcpu.HashingWorker.run() (1,165 samples, 32.11%)</title><rect x="10.0" y="241" width="533.0" height="15.0" fill="rgb(230,215,35)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com.github.chrishantha.sample.highcpu.HashingWorker.run()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[]) (4 samples, 0.11%)</title><rect x="162.8" y="161" width="1.9" height="15.0" fill="rgb(213,152,48)" rx="2" ry="2" />
<text text-anchor="" x="165.82" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigDecimal.add(long, long, int) (1 samples, 0.03%)</title><rect x="825.8" y="193" width="0.5" height="15.0" fill="rgb(247,25,40)" rx="2" ry="2" />
<text text-anchor="" x="828.82" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.JFR$2.run() (1 samples, 0.03%)</title><rect x="1669.5" y="241" width="0.5" height="15.0" fill="rgb(220,21,3)" rx="2" ry="2" />
<text text-anchor="" x="1672.54" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.security.provider.NativePRNG$RandomIO.access$400(sun.security.provider.NativePRNG$RandomIO, byte[]) (499 samples, 13.75%)</title><rect x="292.3" y="177" width="228.3" height="15.0" fill="rgb(225,125,8)" rx="2" ry="2" />
<text text-anchor="" x="295.31" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.security.provider.NativePR..</text>
</g>
</svg>
